// Profiles for different execution environments
profiles {
  slurm {
    process {
      executor = 'slurm'
      errorStrategy = 'retry'
      maxRetries = 2
      scratch = true

      // Global env for Allosmod
      beforeScript = '''
        set -euo pipefail
        export PATH=/work/SimBioSys/share/software/allosmod-lib/bin:$PATH
        export PYTHONPATH=/work/SimBioSys/share/software/allosmod-lib/python:$PYTHONPATH
        export ALLSMOD_DATA=/work/SimBioSys/share/software/allosmod-lib/share/data/allosmod
        module use ~/modulefiles/
        module load ~/modulefiles/allosmod/1.0
      '''

      // Match your bash resources for the heavy run step
      withName: RUN_TASK {
        queue = 'gpu'
        clusterOptions = '--gres=gpu:v100-sxm2:1'
        cpus = 12
        memory = '128 GB'
        time = '8h'
        // nodes/ntasks-per-node are handled by executor; if your site requires:
        // clusterOptions = '--gres=gpu:v100-sxm2:1 --nodes=1 --ntasks-per-node=1'
      }

      // Reasonable defaults for lighter steps
      withName: SETUP_ALLOSMOD { queue = 'cpu'; cpus = 2; memory = '4 GB'; time = '30m' }
      withName: PATCH_QSUB      { queue = 'cpu'; cpus = 1; memory = '1 GB';  time = '10m' }
      withName: PROCESS_UPLOADS { queue = 'cpu'; cpus = 1; memory = '4 GB';  time = '1h'  }
      withName: ZIP_AND_EMAIL   { queue = 'cpu'; cpus = 1; memory = '4 GB';  time = '1h'  }
    }
  }
  
  standard {
    process {
      executor = 'local'
      cpus = 1
      memory = '4 GB'
    }
  }
}

// Default process settings (used when no profile is specified)
process {
  executor = 'slurm'
  errorStrategy = 'retry'
  maxRetries = 2
  scratch = true

  // Global env for Allosmod
  beforeScript = '''
    set -euo pipefail
    export PATH=/work/SimBioSys/share/software/allosmod-lib/bin:$PATH
    export PYTHONPATH=/work/SimBioSys/share/software/allosmod-lib/python:$PYTHONPATH
    export ALLSMOD_DATA=/work/SimBioSys/share/software/allosmod-lib/share/data/allosmod
    module use ~/modulefiles/
    module load ~/modulefiles/allosmod/1.0
  '''

  // Match your bash resources for the heavy run step
  withName: RUN_TASK {
    queue = 'gpu'
    clusterOptions = '--gres=gpu:v100-sxm2:1'
    cpus = 12
    memory = '128 GB'
    time = '8h'
    // nodes/ntasks-per-node are handled by executor; if your site requires:
    // clusterOptions = '--gres=gpu:v100-sxm2:1 --nodes=1 --ntasks-per-node=1'
  }

  // Reasonable defaults for lighter steps
  withName: SETUP_ALLOSMOD { queue = 'cpu'; cpus = 2; memory = '4 GB'; time = '30m' }
  withName: PATCH_QSUB      { queue = 'cpu'; cpus = 1; memory = '1 GB';  time = '10m' }
  withName: PROCESS_UPLOADS { queue = 'cpu'; cpus = 1; memory = '4 GB';  time = '1h'  }
  withName: ZIP_AND_EMAIL   { queue = 'cpu'; cpus = 1; memory = '4 GB';  time = '1h'  }
}

// Developer-overridable scratch base (export SCRATCH_ROOT to change)
def SCRATCH_ROOT = System.getenv('SCRATCH_ROOT') ?: '/scratch/rajagopalmohanraj.n'

// Make LOG_ROOT available to all processes as an env var
env {
  // Expose to all task shells
  SCRATCH_ROOT = SCRATCH_ROOT
  // Project paths derived from SCRATCH_ROOT
  INPUTS_ROOT  = "${SCRATCH_ROOT}/GlycoMap/allosmod/allosmod_inputs"
  LOG_ROOT     = "${SCRATCH_ROOT}/GlycoMap/allosmod/allosmod_backend/logs"
}

params.outdir = params.outdir ?: 'results'
workDir       = "${SCRATCH_ROOT}/work"